
SEQUENCE elevator
    SET battery TO 1 column
        FOR EACH column
            SET elevators to 2
                FOR EACH elevator
                    INIT floorsID '1 to 10'

            SET openDoor
            SET closeDoor
            SET weightMax
    END FOR
            SET queue TO empty
            SET elevatorFloor TO 3
            SET floorAmount TO 10
            SET weightMax TO 1800kg
            SET elevatorStatus TO idle

END SEQUENCE

'using a queue to list the floors'
SEQUENCE addToQueue USING elevator AND requestedFloor
    IF requestedFloor is NOT EQUAL to requestedFloor THEN
        ADD requestedFloor to queue
    ENDIF
END SEQUENCE
'sorting the floors in priority and order'
SEQUENCE sortQueue USING queue AND direction
    COMPUTE requestedFloor added TO queue
        IF direction is up THEN
            SORT in ascending order
        ELSE IF direction is down THEN
            SORT in descending order
    ENDIF
        RETURN sortedQueue
END SEQUENCE 


'trying to get the best elevator possibly the most efficient way possible'
SEQUENCE findBestElevator USING currentFloor AND direction

    WHILE bestElevator IS not found
        FOR EACH Elevator in column
            IF currentFloor EQUALS elevatorPosition AND is idle THEN
                RETURN bestElevator
            ELSE IF elevatorStatus is active AND currentFloor is BIGGER OR EQUAL TO elevatorPosition AND direction is up THEN
                RETURN bestElevator
            ELSE IF elevatorStatus is active AND currentFloor is LESSER OR EQUAL to elevatorPosition AND direction is down THEN
                RETURN bestElevator
            ELSE IF elevatorStatus is idle AND currentFloor is NOT EQUAL to elevatorPosition THEN
                CALCULATE absolute difference between elevatorPosition and currentFloor
                    COMPUTE the lowest gap
                        GET Elevator computed
                RETURN bestElevator
            ENDIF
        END FOR
    END WHILE
    
    SET bestElevator TO elevator RETURNING elevator

END SEQUENCE
    
'simply moving the machine'
SEQUENCE moveElevator USING elevator
    REPEAT
        IF currentFloor is LESS than requestedFloor THEN
            SET elevatorStatus TO active
		    SET Direction TO Up
                INCREMENT floor by 1
	    ELSE
            SET elevatorStatus TO active
		    SET Direction TO Down
                DECREMENT floor by 1      
    END IF
	    UNTIL currentFloor EQUALS requestedFloor THEN
            CALL openDoor
    
    
	
END SEQUENCE
'opening door using a timer to make sure it does not close super fast'
SEQUENCE OpenDoor USING requestedFloor
	WAIT UNTIL elevatorStatus IS stopped OR idle on requestedFloor
	INIT open Door
    INIT Timer TO 5 Seconds 
	WHILE Timer is GREATER than 0 Second OR Door IS Obstructed OR Weight IS GREATER than weightMax
		KEEP Door Opened
	END WHILE 
END SEQUENCE


SEQUENCE closeDoor USING Elevator
	INIT close Door
	WHILE Door IS Closing 
		IF Obstructed THEN
			Call OpenDoor WITH Elevator
	END WHILE
	IF door IS closed THEN
		SET Elevator elevatorStatus TO Idle 
		INIT idleTimer TO 30 Seconds
	END IF 
END SEQUENCE

'main functions of the controller'
SEQUENCE requestElevator USING currentFloor AND direction
    CALL findBestElevator WITH currentFloor AND direction RETURNING elevator
    CALL moveElevator WITH queue RETURNING bestElevator
    CALL openDoors
END SEQUENCE

SEQUENCE requestFloor USING requestedFloor AND direction
    CALL closeDoors
    CALL findBestElevator WITH elevator
    CALL addToQueue WITH queue and requestedFloor
    CALL moveElevator WITH elevator
    CALL openDoors
END SEQUENCE



//Scenario 1
CALL requestElevator WITH 3 and down

